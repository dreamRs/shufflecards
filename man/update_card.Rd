% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/update.R
\name{update_card}
\alias{update_card}
\title{Update meta-data of a card}
\usage{
update_card(
  shuffleId,
  cardId,
  ...,
  title = NULL,
  session = shiny::getDefaultReactiveDomain()
)
}
\arguments{
\item{shuffleId}{The id of the shuffle container.}

\item{cardId}{The id of the card to update}

\item{...}{Attributes to update or set.}

\item{title}{New title for the card.}

\item{session}{The \code{session} object passed to function given to shinyServer.}
}
\description{
Use in a \strong{Shiny} app to update data associated to a card.
}
\examples{
if (interactive()) {
  library(shiny)
  library(shufflecards)

  ui <- fluidPage(
    tags$h2("Update cards's meta-data"),

    fluidRow(
      column(
        width = 3,
        sliderInput("val1", "Value card 1", 1, 10, 1),
        sliderInput("val2", "Value card 2", 1, 10, 2),
        sliderInput("val3", "Value card 3", 1, 10, 3),
        sliderInput("val4", "Value card 4", 1, 10, 4),
        actionButton("arrange", "Arrange cards with new values")
      ),
      column(
        width = 9,
        shuffle_container(
          shuffleId = "grid",
          shuffle_card(
            id = "card1",
            myvalue = 1,
            tags$div("My first card", style = "text-align: center; line-height: 200px"),
            style = "border: 2px solid red; border-radius: 5px;",
            width = "300px", # better with fixed width/height
            height = "200px"
          ),
          shuffle_card(
            id = "card2",
            myvalue = 2,
            tags$div("Second one", style = "text-align: center; line-height: 200px"),
            style = "border: 2px solid red; border-radius: 5px;",
            width = "300px", # better with fixed width/height
            height = "200px"
          ),
          shuffle_card(
            id = "card3",
            myvalue = 3,
            tags$div("Third one", style = "text-align: center; line-height: 200px"),
            style = "border: 2px solid red; border-radius: 5px;",
            width = "300px", # better with fixed width/height
            height = "200px"
          ),
          shuffle_card(
            id = "card4",
            myvalue = 4,
            tags$div("Fourth one", style = "text-align: center; line-height: 200px"),
            style = "border: 2px solid red; border-radius: 5px;",
            width = "300px", # better with fixed width/height
            height = "200px"
          )
        )
      )
    )

  )

  server <- function(input, output, session) {

    # Update cards ----
    observeEvent(input$val1, {
      update_card("grid", "card1", myvalue = input$val1)
    }, ignoreInit = TRUE)
    observeEvent(input$val2, {
      update_card("grid", "card2", myvalue = input$val2)
    }, ignoreInit = TRUE)
    observeEvent(input$val3, {
      update_card("grid", "card3", myvalue = input$val3)
    }, ignoreInit = TRUE)
    observeEvent(input$val4, {
      update_card("grid", "card4", myvalue = input$val4)
    }, ignoreInit = TRUE)

    # Arrange ----
    observeEvent(input$arrange, {
      arrange_cards("grid", "myvalue", numeric = TRUE)
    })
  }

  shinyApp(ui, server)
}
}
