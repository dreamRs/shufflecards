% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/update.R
\name{arrange-cards}
\alias{arrange-cards}
\alias{arrange_cards}
\alias{randomize_cards}
\title{Arrange cards in a Shuffle grid layout}
\usage{
arrange_cards(shuffleId, by, desc = FALSE,
  session = shiny::getDefaultReactiveDomain())

randomize_cards(shuffleId, session = shiny::getDefaultReactiveDomain())
}
\arguments{
\item{shuffleId}{The id of the shuffle container.}

\item{by}{Key(s) defined in \code{shuffle_card} to sort elements.}

\item{desc}{Logical, set to \code{TRUE} to sort in decreasing order.}

\item{session}{The \code{session} object passed to function given to shinyServer.}
}
\description{
Use in a \strong{Shiny} app to sort cards.
}
\examples{
if (interactive()) {
  library(ggplot2)
  library(shiny)
  library(shufflecards)

  # utility fun
  is.even <- function(x) x \%\% 2 == 0

  ui <- fluidPage(
    tags$h2("Arrange a Shuffle Grid By Groups"),
    fluidRow(
      column(
        width = 3,
        radioButtons(
          inputId = "sort",
          label = "Sort by:",
          choices = c("Ascending order (numeric)",
                      "Descending order (numeric)",
                      "Ascending order (character)",
                      "Descending order (character)",
                      "Random!")
        )
      ),
      column(
        width = 9,
        shuffle_container(
          shuffleId = "gridNum",
          card_list = lapply(
            X = 1:12,
            FUN = function(i) {
              shuffle_card(
                value_num = i,
                value_char = as.character(i), # used to sort
                plotOutput(
                  outputId = paste0("plot", i),
                  width = "250px",
                  height = "250px"
                )
              )
            }
          )
        )
      )
    )
  )

  server <- function(input, output, session) {

    # Make individual plots ----
    lapply(
      X = 1:12,
      FUN =  function(i) {
        output[[paste0("plot", i)]] <- renderPlot({
          ggplot() + geom_text(aes(1, 1, label = i), size = 50)
        })
      }
    )

    # Sorts ----
    observe({
      if (input$sort == "Ascending order (numeric)") {

        arrange_cards("gridNum", "value_num")

      } else if (input$sort == "Descending order (numeric)") {

        arrange_cards("gridNum", "value_num", desc = TRUE)

      } else if (input$sort == "Ascending order (character)") {

        arrange_cards("gridNum", "value_char")

      } else if (input$sort == "Descending order (character)") {

        arrange_cards("gridNum", "value_char", desc = TRUE)

      } else{

        randomize_cards("gridNum")

      }
    })
  }

  shinyApp(ui, server)
}
}
