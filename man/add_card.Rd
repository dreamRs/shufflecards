% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adding.R
\name{add_card}
\alias{add_card}
\title{Add a card in a Shuffle grid}
\usage{
add_card(
  shuffleId,
  card,
  where = c("after", "before"),
  session = shiny::getDefaultReactiveDomain()
)
}
\arguments{
\item{shuffleId}{The id of the shuffle container.}

\item{card}{A \code{\link{shuffle_card}} to add.}

\item{where}{Where to add card : at the beginning or at the end. But careful
it can depends on the last arrangement made by the user ! (Check example)}

\item{session}{The \code{session} object passed to function given to shinyServer.}
}
\description{
Use in a \strong{Shiny} app to add card(s) to an existing Shuffle grid.
}
\examples{
if (interactive()) {
  library(shiny)
  library(shufflecards)
  library(ggplot2)

  ui <- fluidPage(
    tags$h2("Add cards to a Shuffle grid"),
    actionButton(inputId = "add", label = "Add a new card!"),
    actionButton(inputId = "arrange", label = "Arrange cards"),
    actionButton(inputId = "arrangedesc", label = "Arrange cards (desc)"),
    actionButton(inputId = "random", label = "Randomize cards"),
    shuffle_container(
      shuffleId = "grid",
      shuffle_card(
        id = "card1", number = 1,
        plotOutput(
          outputId = "plot1",
          width = "250px",
          height = "250px"
        )
      )
    )
  )

  server <- function(input, output, session) {

    # First plot
    output$plot1 <- renderPlot({
      ggplot() + geom_text(aes(1, 1, label = 1), size = 50)
    })

    # counter of cards
    counter <- reactiveVal(1)
    # Update counter when button is clickeck
    observeEvent(input$add, {
      newValue <- counter() + 1
      counter(newValue)
    }, ignoreInit = TRUE)

    # When counter change add a card
    observeEvent(counter(), {
      num <- counter()
      add_card(
        session = session,
        shuffleId = "grid",
        card = shuffle_card(
          id = paste0("card", num), number = num,
          plotOutput(outputId = paste("plot", num), width = "250px", height = "250px")
        )
      )
      output[[paste("plot", num)]] <- renderPlot({
        ggplot() + geom_text(aes(1, 1, label = num), size = 50)
      })
    }, ignoreInit = TRUE)


    # Arrange ----
    observeEvent(input$arrange, {
      arrange_cards("grid", "number")
    })
    observeEvent(input$arrangedesc, {
      arrange_cards("grid", "number", desc = TRUE)
    })
    observeEvent(input$random, {
      randomize_cards("grid")
    })
  }

  shinyApp(ui, server)
}
}
